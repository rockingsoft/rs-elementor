name: Nightly Build (main)

on:
  push:
    branches: [ main ]

jobs:
  nightly-zip:
    name: Build Nightly ZIP
    runs-on: ubuntu-latest
    env:
      PLUGIN_SLUG: rs-elementor-widgets
      MAIN_PLUGIN_FILE: rs-elementor-widgets.php
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute nightly version
        id: nightly
        shell: bash
        run: |
          set -euo pipefail
          TS=$(date -u +"%Y%m%d-%H%M%S")
          # Parse base version (numbers and dots) from main plugin file header
          if grep -qi '^\s*\*\s*Version\s*:' "$MAIN_PLUGIN_FILE"; then
            BASE=$(grep -i '^\s*\*\s*Version\s*:' "$MAIN_PLUGIN_FILE" | head -n1 | sed -E 's/.*Version\s*:\s*([0-9]+(\.[0-9]+)*).*/\1/')
          else
            echo 'Could not determine base version from main plugin file.'
            exit 1
          fi
          VERSION="${BASE}-${TS}"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "stamp=${TS}" >> "$GITHUB_OUTPUT"

      - name: Prepare build directory
        run: |
          set -euo pipefail
          mkdir -p build
          DEST="build/${{ env.PLUGIN_SLUG }}"
          rsync -av . "$DEST" \
            --exclude '.git/' \
            --exclude '.github/' \
            --exclude 'build/' \
            --exclude '.gitignore' \
            --exclude '.editorconfig' \
            --exclude 'node_modules/' \
            --exclude 'vendor/' \
            --exclude '*.zip' \
            --exclude 'README-dev*' \
            --exclude 'tests/'

      - name: Stamp nightly version into plugin file
        run: |
          set -euo pipefail
          PLUGIN_FILE="build/${{ env.PLUGIN_SLUG }}/${{ env.MAIN_PLUGIN_FILE }}"
          test -f "$PLUGIN_FILE" || { echo "Plugin file not found: $PLUGIN_FILE"; exit 1; }
          sed -E -i "s/^(\\s*\\*\\s*Version\\s*:\\s*).*/\\1${{ steps.nightly.outputs.version }}/I" "$PLUGIN_FILE"

      - name: Validate main plugin file exists
        run: |
          test -f "build/${{ env.PLUGIN_SLUG }}/${{ env.MAIN_PLUGIN_FILE }}" || { echo "Main plugin file not found"; ls -la "build/${{ env.PLUGIN_SLUG }}"; exit 1; }

      - name: Create Nightly ZIP
        id: zip
        run: |
          cd build
          ZIP_NAME="${{ env.PLUGIN_SLUG }}-${{ steps.nightly.outputs.version }}.zip"
          zip -r "$ZIP_NAME" "${{ env.PLUGIN_SLUG }}" -9
          echo "zip_path=$(pwd)/$ZIP_NAME" >> "$GITHUB_OUTPUT"
          echo "zip_name=$ZIP_NAME" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.zip.outputs.zip_name }}
          path: ${{ steps.zip.outputs.zip_path }}
          retention-days: 14
